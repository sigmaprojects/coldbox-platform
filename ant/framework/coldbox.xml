<?xml version="1.0"?>
<!-- ====================================================================== 
     ColdBox Platform Build (www.coldbox.org)                                                               
     ====================================================================== -->
<project name="coldbox-build" default="build" basedir="../../">

	<description>
    	Build a new distribution of ColdBox Platform
    </description>
	<!-- Version: UPDATE ON EACH RELEASE AS NEEDED -->
	<property name="coldbox.version"	value="3.8.0"/>
	<!-- Build Labels -->
	<tstamp prefix="start"/>
	
	<!--External Ant Tasks-->
	<property name="ant.compilechecks"  value="ant/framework/ant_compile.xml" />
	
	<!-- Init -->
	<target name="init" description="Init">
		<input addproperty="doCompile" message="Compile?" defaultvalue="true" validargs="true,false" />
		<condition property="compile.true">
			<istrue value="${doCompile}"/>
		</condition>

		<!-- Default environment check, if not passed via -Denvironment -->
    	<condition property="environment" value="local">
    		<not><isset property="environment" /></not>
    	</condition>
    	<echo>Loading from environment: ${environment}</echo>
		<!-- Load env properties -->
		<loadproperties srcFile="ant/framework/coldbox-${environment}.properties"/>

		<!-- Build Number -->
		<propertyfile file="ant/framework/build.number" comment="Build Number for ANT. Edit not!">
			<entry key="build.number" 
					type="int" 
			     	operation="+"
					pattern="00000"
			     	default="1" />
		</propertyfile>
		<property file="ant/framework/build.number"/>
		<!-- Build Label -->
		<property name="build.label" value="coldbox-${coldbox.version}.${build.number}-${start.DSTAMP}${start.TSTAMP}"/>
		<!-- Cleanup + Init -->
		<delete dir="${dir.build}" />
		<mkdir dir="${dir.build}"/>
	</target>
	
	<!--Framework Compile Checks -->
	<target name="compilechecks" description="Compile framework checks." depends="init" if="compile.true">
		<!--Need Compile Checks First -->
		<ant antfile="${ant.compilechecks}" target="compile.checks" />		
	</target>
	
	<!--BUild-->
	<target name="build" description="Build a new ColdBox Platform distribution" depends="compilechecks">
      	
		<!-- Copy build ID -->
		<concat destfile="${dir.build}/${build.label}">Built on ${start.TODAY}</concat>
		
		<!-- Copy src -->	
      	<copy todir="${dir.build}/coldbox/system">
        	<fileset dir="system">
        	</fileset>
        </copy>

        <!-- Copy TestBox Runner -->	
      	<copy todir="${dir.build}/coldbox/test-runner">
        	<fileset dir="test-runner">
        	</fileset>
        </copy>

        <!-- Copy TestBox Browser -->	
      	<copy todir="${dir.build}/coldbox/test-browser">
        	<fileset dir="test-browser">
        	</fileset>
        </copy>
		
		<!-- Samples -->
		<copy todir="${dir.build}/coldbox/samples">
			<fileset dir="${dir.samples}">
				<exclude name="settings.xml" />
				<exclude name=".project" />
				<exclude name="ant/*" />
        	</fileset>
        </copy>
		
		<!-- Install folder -->
		<copy todir="${dir.build}/coldbox/install">
        	<fileset dir="install">
        		<exclude name="ColdboxCheatSheet.pages" />
        	</fileset>
        </copy>
		
		<!--AppTemplate-->
		<copy todir="${dir.build}/coldbox/ApplicationTemplates">
        	<fileset dir="ApplicationTemplates" />
        </copy>
		
		<!--Copy text files to install folder-->
		<copy todir="${dir.build}/coldbox/install">
			<fileset file="license.txt" />
			<fileset file="readme.txt" />						
		</copy>

		<!-- Replace Build Numbers -->
		<replaceregexp match='@build.number@' replace="${build.number}" flags="ig" byline="true">
		  <fileset dir="${dir.build}">
		  </fileset>
		</replaceregexp>
		
		<!-- Execute IDE Dictionaries -->
		<get dest="${dir.build}/cfbuilder.html" src="${url.dictionaries}/builderDictionary.cfm" verbose="true"/>
		<delete file="${dir.build}/cfbuilder.html" />
		<get dest="${dir.build}/cfeclipse.html" src="${url.dictionaries}/cfeclipseDictionary.cfm" verbose="true"/>
		<delete file="${dir.build}/cfeclipse.html" />
		<get dest="${dir.build}/sublime.html" src="${url.dictionaries}/sublime-completions.cfm" verbose="true"/>
		<delete file="${dir.build}/sublime.html" />

		<!-- Execute ColdDoc -->
		<get dest="${dir.build}/colddoc.html" src="${url.api}${coldbox.version}&amp;path=${dir.api}&amp;coldbox_root=${dir.build}/coldbox" verbose="true"/>
		<delete file="${dir.build}/colddoc.html" />
		
		<!-- Zip API Docs -->
		<zip destfile="${dir.exports}/ColdBoxDocs-${coldbox.version}.zip" basedir="${dir.build}/apidocs"></zip>
				
		<!-- Zip Bundle -->
		<zip destfile="${dir.exports}/coldbox_${coldbox.version}.zip" basedir="${dir.build}"></zip>
		
		<!-- Cleanup for StandAlone Build -->
		<delete dir="${dir.build}/coldbox/ApplicationTemplates"/>
		<delete dir="${dir.build}/apidocs" />
		<delete dir="${dir.build}/coldbox/test-runner" />
		<delete dir="${dir.build}/coldbox/test-browser" />
		<delete dir="${dir.build}/coldbox/install" />
		<delete dir="${dir.build}/coldbox/samples" />
		<copy todir="${dir.build}/">
			<fileset file="license.txt" />
			<fileset file="readme.txt" />		
		</copy>	
			
		<!-- Zip Bundle -->
		<zip destfile="${dir.exports}/coldbox_standalone_${coldbox.version}.zip" basedir="${dir.build}"></zip>
		
		<!-- Cleanup -->
		<delete dir="${dir.build}" />
		
    </target>
	
</project>
